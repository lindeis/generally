<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_704397_generally.ModuleUtils</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>ModuleUtils</name>
        <script><![CDATA[var ModuleUtils = Class.create();
ModuleUtils.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
    type: 'ModuleUtils',

    year: function(which) {
        var property = new GlideRecord('sys_properties');
        property.addQuery('name', 'x_704397_generally.currentYear');
        property.query();
        if (property.next()) {
            var value = property.getValue('value');
            switch (which) {
                case 'last':
                    value -= 1;
                    return value;
                default:
                    return value;
            }
        }
    },

    iftDriverStandings: function() {
        var driver = new GlideRecord('x_704397_generally_driver');
        var utils = new ResultUtils();
        driver.addEncodedQuery(utils.competitorsBySeries('driver', this.year('last'), 'ift'));
        driver.query();
        var standings = [];
        while (driver.next()) {
            standings.push(driver.getUniqueValue());
        }
        return standings;
    },

    wrcDriverStandings: function() {
        var driver = new GlideRecord('x_704397_generally_driver');
        var utils = new ResultUtils();
        driver.addEncodedQuery(utils.competitorsBySeries('driver', this.year('last'), 'wrc'));
        driver.query();
        var standings = [];
        while (driver.next()) {
            standings.push(driver.getUniqueValue());
        }
        return standings;
    },

    gksDriverStandings: function() {
        var driver = new GlideRecord('x_704397_generally_driver');
        var utils = new ResultUtils();
        driver.addEncodedQuery(utils.competitorsBySeries('driver', this.year('last'), 'gks'));
        driver.query();
        var standings = [];
        while (driver.next()) {
            standings.push(driver.getUniqueValue());
        }
        return standings;
    },

    iftTeamStandings: function() {
        var team = new GlideRecord('x_704397_generally_team');
        var utils = new ResultUtils();
        team.addEncodedQuery(utils.competitorsBySeries('team', this.year('last'), 'ift'));
        team.query();
        var standings = [];
        while (team.next()) {
            standings.push(team.getUniqueValue());
        }
        return standings;
    },

    wrcTeamStandings: function() {
        var team = new GlideRecord('x_704397_generally_team');
        var utils = new ResultUtils();
        team.addEncodedQuery(utils.competitorsBySeries('team', this.year('last'), 'wrc'));
        team.query();
        var standings = [];
        while (team.next()) {
            standings.push(team.getUniqueValue());
        }
        return standings;
    }
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-03-09 14:52:22</sys_created_on>
        <sys_id>6a8f40431b8ec1107f64ec21604bcbad</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>ModuleUtils</sys_name>
        <sys_package display_value="Generally" source="x_704397_generally">3d82299c1b333010b07fa9b4bd4bcb01</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Generally">3d82299c1b333010b07fa9b4bd4bcb01</sys_scope>
        <sys_update_name>sys_script_include_6a8f40431b8ec1107f64ec21604bcbad</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-03-09 15:53:19</sys_updated_on>
    </sys_script_include>
</record_update>
